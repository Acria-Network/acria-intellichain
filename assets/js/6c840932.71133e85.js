"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[520],{3905:(f,e,a)=>{a.d(e,{Zo:()=>r,kt:()=>u});var b=a(7294);function t(f,e,a){return e in f?Object.defineProperty(f,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):f[e]=a,f}function n(f,e){var a=Object.keys(f);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(f);e&&(b=b.filter((function(e){return Object.getOwnPropertyDescriptor(f,e).enumerable}))),a.push.apply(a,b)}return a}function d(f){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?n(Object(a),!0).forEach((function(e){t(f,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(f,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(e){Object.defineProperty(f,e,Object.getOwnPropertyDescriptor(a,e))}))}return f}function i(f,e){if(null==f)return{};var a,b,t=function(f,e){if(null==f)return{};var a,b,t={},n=Object.keys(f);for(b=0;b<n.length;b++)a=n[b],e.indexOf(a)>=0||(t[a]=f[a]);return t}(f,e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(f);for(b=0;b<n.length;b++)a=n[b],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(f,a)&&(t[a]=f[a])}return t}var c=b.createContext({}),o=function(f){var e=b.useContext(c),a=e;return f&&(a="function"==typeof f?f(e):d(d({},e),f)),a},r=function(f){var e=o(f.components);return b.createElement(c.Provider,{value:e},f.children)},l="mdxType",s={inlineCode:"code",wrapper:function(f){var e=f.children;return b.createElement(b.Fragment,{},e)}},p=b.forwardRef((function(f,e){var a=f.components,t=f.mdxType,n=f.originalType,c=f.parentName,r=i(f,["components","mdxType","originalType","parentName"]),l=o(a),p=t,u=l["".concat(c,".").concat(p)]||l[p]||s[p]||n;return a?b.createElement(u,d(d({ref:e},r),{},{components:a})):b.createElement(u,d({ref:e},r))}));function u(f,e){var a=arguments,t=e&&e.mdxType;if("string"==typeof f||t){var n=a.length,d=new Array(n);d[0]=p;var i={};for(var c in e)hasOwnProperty.call(e,c)&&(i[c]=e[c]);i.originalType=f,i[l]="string"==typeof f?f:t,d[1]=i;for(var o=2;o<n;o++)d[o]=a[o];return b.createElement.apply(null,d)}return b.createElement.apply(null,a)}p.displayName="MDXCreateElement"},539:(f,e,a)=>{a.r(e),a.d(e,{assets:()=>c,contentTitle:()=>d,default:()=>s,frontMatter:()=>n,metadata:()=>i,toc:()=>o});var b=a(7462),t=(a(7294),a(3905));const n={sidebar_position:2},d="Setup",i={unversionedId:"node/setup",id:"node/setup",title:"Setup",description:"The below guide will instruct you on how to set up a IntelliChain Node on a cloud provider for a production setup.",source:"@site/docs/node/setup.md",sourceDirName:"node",slug:"/node/setup",permalink:"/docs/node/setup",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"Installation",permalink:"/docs/node/installation"},next:{title:"Validator Hosting",permalink:"/docs/node/validator-hosting"}},c={},o=[{value:"Requirements",id:"requirements",level:2},{value:"Setting up the VM connectivity",id:"setting-up-the-vm-connectivity",level:3},{value:"Overview",id:"overview",level:2},{value:"Step 1: Initialize data folders and generate validator keys",id:"step-1-initialize-data-folders-and-generate-validator-keys",level:2},{value:"Outputting Secrets",id:"outputting-secrets",level:3},{value:"Step 2: Copy the genesis file to all your nodes",id:"step-2-copy-the-genesis-file-to-all-your-nodes",level:2},{value:"Step 3: Run all the clients",id:"step-3-run-all-the-clients",level:2}],r={toc:o},l="wrapper";function s(f){let{components:e,...a}=f;return(0,t.kt)(l,(0,b.Z)({},r,a,{components:e,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"setup"},"Setup"),(0,t.kt)("admonition",{title:"This guide is for mainnet or testnet setups",type:"info"},(0,t.kt)("p",{parentName:"admonition"},"The below guide will instruct you on how to set up a IntelliChain Node on a cloud provider for a production setup.")),(0,t.kt)("h2",{id:"requirements"},"Requirements"),(0,t.kt)("p",null,"Refer to ",(0,t.kt)("a",{parentName:"p",href:"/docs/node/installation"},"Installation")," to install IntelliChain-CLI."),(0,t.kt)("h3",{id:"setting-up-the-vm-connectivity"},"Setting up the VM connectivity"),(0,t.kt)("p",null,"Depending on your choice of cloud provider, you may set up connectivity and rules between the VMs using a firewall,\nsecurity groups, or access control lists."),(0,t.kt)("p",null,"As the only part of the ",(0,t.kt)("inlineCode",{parentName:"p"},"intellichain-cli")," that needs to be exposed to other VMs is the libp2p server, simply allowing\nall communication between VMs on the default libp2p port ",(0,t.kt)("inlineCode",{parentName:"p"},"1478")," is enough."),(0,t.kt)("h2",{id:"overview"},"Overview"),(0,t.kt)("p",null,"In this guide, our goal is to create one or multiple working IntelliChain nodes working with ",(0,t.kt)("a",{parentName:"p",href:"https://github.com/ethereum/EIPs/issues/650"},"IBFT consensus protocol"),".\nEach node will run on their own VM, as the idea of this guide is to give you a fully functional IntelliChain node keeping the validator keys private to ensure a trustless network setup."),(0,t.kt)("p",null,"To achieve that, we will guide you through 4 easy steps:"),(0,t.kt)("ol",{start:0},(0,t.kt)("li",{parentName:"ol"},"Take a look at the list of ",(0,t.kt)("strong",{parentName:"li"},"Requirements")," above"),(0,t.kt)("li",{parentName:"ol"},"Generate the private keys for each of your nodes, and initialize the data directory"),(0,t.kt)("li",{parentName:"ol"},"Create the ",(0,t.kt)("inlineCode",{parentName:"li"},"genesis.json")," on your local machine, and send/transfer it to each of the nodes"),(0,t.kt)("li",{parentName:"ol"},"Start all the nodes ")),(0,t.kt)("h2",{id:"step-1-initialize-data-folders-and-generate-validator-keys"},"Step 1: Initialize data folders and generate validator keys"),(0,t.kt)("p",null,"You need to initialize the data folders, on each node:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"node-1> intellichain-cli secrets init --data-dir data-dir\n")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"node-2> intellichain-cli secrets init --data-dir data-dir\n")),(0,t.kt)("p",null,"Each of these commands will print the validator key, bls public key and the ",(0,t.kt)("a",{parentName:"p",href:"https://docs.libp2p.io/concepts/peer-id/"},"node ID"),". You will need the Node ID of the first node for the next step."),(0,t.kt)("h3",{id:"outputting-secrets"},"Outputting Secrets"),(0,t.kt)("p",null,"The secrets output can be retrieved again, if needed."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"node-n> intellichain-cli secrets output --data-dir data-dir\n")),(0,t.kt)("admonition",{title:"Keep your data directory to yourself!",type:"warning"},(0,t.kt)("p",{parentName:"admonition"},"The data directories generated above, besides initializing the directories for holding the blockchain state, will also generate your validator's private keys.\n",(0,t.kt)("strong",{parentName:"p"},"This key should be kept as a secret, as stealing it would render somebody capable of impersonating you as the validator in the network!"))),(0,t.kt)("h2",{id:"step-2-copy-the-genesis-file-to-all-your-nodes"},"Step 2: Copy the genesis file to all your nodes"),(0,t.kt)("p",null,"Create a text file called ",(0,t.kt)("inlineCode",{parentName:"p"},"genesis.json"),", copy the following content to it and place it in the same folder as ",(0,t.kt)("inlineCode",{parentName:"p"},"intellichain-cli"),":"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="genesis.json"',title:'"genesis.json"'},'{\n    "name": "acria-intellichain",\n    "genesis": {\n        "nonce": "0x0000000000000000",\n        "timestamp": "0x0",\n        "extraData": "0x0000000000000000000000000000000000000000000000000000000000000000f90127f90120f84694c1080c8cf9e147d0edebf0dd6ec178934e786ac4b0916955ed585f88a3a45d26b78491dde8964927db02e91d690892db3d04e6cf9348624121d815e7a1502dda165f66e902f8469420833acb9a58f001e6a34d4ca724c020f83d29cfb0806192880d33393cee191613ae06e4a9b50363b68dd38f26e0dcc0cb36b30d843fc7eeff1f1c9ae66c44f4b2caea6a85f846940f8a31da5e7786ac30411c8cec0dbaf9378a7613b0914c971325a2e39490ac9a58efd271b41dac872669c157260542c2a6283abb8c5a84a2eb7c50434c5aa34855cf3cb70ff84694f8ba514790e65a8451a3ccb9be9239d605044585b0a2547bb81719f7b57a99973b060107c0c9b7065ef124568af799926e57d621de9d737822e38155ed698916cbee206ff380c28080",\n        "gasLimit": "0x1C9C380",\n        "difficulty": "0x1",\n        "mixHash": "0x0000000000000000000000000000000000000000000000000000000000000000",\n        "coinbase": "0x0000000000000000000000000000000000000000",\n        "alloc": {\n            "0x0000000000000000000000000000000000001001": {\n                "code": "0x60806040526004361061012e5760003560e01c80638a7c016a116100ab578063ca1e78191161006f578063ca1e78191461045b578063d94c111b14610486578063e387a7ed146104af578063e804fbf6146104da578063f90ecacc14610505578063facd743b146105425761019c565b80638a7c016a14610374578063960bfe041461039f5780639911da87146103c8578063af6da36e14610405578063c795c077146104305761019c565b80633a4b66f1116100f25780633a4b66f11461029a5780633c561f04146102a457806351a9ab32146102cf578063714ff4251461030c5780637dceceb8146103375761019c565b806302b75199146101a1578063065ae171146101de5780632367f6b51461021b5780632def662014610258578063373d61321461026f5761019c565b3661019c576101523373ffffffffffffffffffffffffffffffffffffffff1661057f565b15610192576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610189906117c7565b60405180910390fd5b61019a6105a2565b005b600080fd5b3480156101ad57600080fd5b506101c860048036038101906101c39190611859565b610725565b6040516101d5919061189f565b60405180910390f35b3480156101ea57600080fd5b5061020560048036038101906102009190611859565b61073d565b60405161021291906118d5565b60405180910390f35b34801561022757600080fd5b50610242600480360381019061023d9190611859565b61075d565b60405161024f919061189f565b60405180910390f35b34801561026457600080fd5b5061026d6107a6565b005b34801561027b57600080fd5b50610284610891565b604051610291919061189f565b60405180910390f35b6102a261089b565b005b3480156102b057600080fd5b506102b9610904565b6040516102c69190611a42565b60405180910390f35b3480156102db57600080fd5b506102f660048036038101906102f19190611859565b610aaa565b6040516103039190611aae565b60405180910390f35b34801561031857600080fd5b50610321610b4a565b60405161032e919061189f565b60405180910390f35b34801561034357600080fd5b5061035e60048036038101906103599190611859565b610b54565b60405161036b919061189f565b60405180910390f35b34801561038057600080fd5b50610389610b6c565b604051610396919061189f565b60405180910390f35b3480156103ab57600080fd5b506103c660048036038101906103c19190611afc565b610b72565b005b3480156103d457600080fd5b506103ef60048036038101906103ea9190611859565b610d90565b6040516103fc919061189f565b60405180910390f35b34801561041157600080fd5b5061041a610da8565b604051610427919061189f565b60405180910390f35b34801561043c57600080fd5b50610445610dae565b604051610452919061189f565b60405180910390f35b34801561046757600080fd5b50610470610db4565b60405161047d9190611be7565b60405180910390f35b34801561049257600080fd5b506104ad60048036038101906104a89190611d3e565b610e42565b005b3480156104bb57600080fd5b506104c4610ee0565b6040516104d1919061189f565b60405180910390f35b3480156104e657600080fd5b506104ef610ee6565b6040516104fc919061189f565b60405180910390f35b34801561051157600080fd5b5061052c60048036038101906105279190611afc565b610ef0565b6040516105399190611d96565b60405180910390f35b34801561054e57600080fd5b5061056960048036038101906105649190611859565b610f2f565b60405161057691906118d5565b60405180910390f35b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b34600460008282546105b49190611de0565b9250508190555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461060a9190611de0565b9250508190555061061a33610f85565b156106d55761062833610fe5565b600a80549050600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b3373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d3460405161071b919061189f565b60405180910390a2565b60036020528060005260406000206000915090505481565b60016020528060005260406000206000915054906101000a900460ff1681565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6107c53373ffffffffffffffffffffffffffffffffffffffff1661057f565b15610805576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fc906117c7565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610887576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087e90611e60565b60405180910390fd5b61088f611134565b565b6000600454905090565b6108ba3373ffffffffffffffffffffffffffffffffffffffff1661057f565b156108fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f1906117c7565b60405180910390fd5b6109026105a2565b565b60606000808054905067ffffffffffffffff81111561092657610925611c13565b5b60405190808252806020026020018201604052801561095957816020015b60608152602001906001900390816109445790505b50905060005b600080549050811015610aa2576007600080838154811061098357610982611e80565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546109f390611ede565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1f90611ede565b8015610a6c5780601f10610a4157610100808354040283529160200191610a6c565b820191906000526020600020905b815481529060010190602001808311610a4f57829003601f168201915b5050505050828281518110610a8457610a83611e80565b5b60200260200101819052508080610a9a90611f0f565b91505061095f565b508091505090565b60076020528060005260406000206000915090508054610ac990611ede565b80601f0160208091040260200160405190810160405280929190818152602001828054610af590611ede565b8015610b425780601f10610b1757610100808354040283529160200191610b42565b820191906000526020600020905b815481529060010190602001808311610b2557829003601f168201915b505050505081565b6000600554905090565b60026020528060005260406000206000915090505481565b60085481565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf990611fa3565b60405180910390fd5b806008819055506060600a805480602002602001604051908101604052809291908181526020018280548015610c8d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610c43575b5050505050905060005b8151811015610d8b5760085460026000848481518110610cba57610cb9611e80565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610d2b57610d26828281518110610d1957610d18611e80565b5b6020026020010151611416565b610d78565b610d4e828281518110610d4157610d40611e80565b5b6020026020010151610f85565b15610d7757610d76828281518110610d6957610d68611e80565b5b6020026020010151610fe5565b5b5b8080610d8390611f0f565b915050610c97565b505050565b600b6020528060005260406000206000915090505481565b60065481565b60055481565b60606000805480602002602001604051908101604052809291908181526020018280548015610e3857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610dee575b5050505050905090565b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081610e8e919061216f565b503373ffffffffffffffffffffffffffffffffffffffff167f472da4d064218fa97032725fbcff922201fa643fed0765b5ffe0ceef63d7b3dc82604051610ed59190611aae565b60405180910390a250565b60045481565b6000600654905090565b60008181548110610f0057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000610f9082611714565b158015610fde5750600854600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b9050919050565b6006546000805490501061102e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611025906122b3565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600080549050600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600460008282546111cf91906122d3565b925050819055506111df33611714565b1561137e576111ed33611416565b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006001600a8054905061124591906122d3565b9050808214611334576000600a828154811061126457611263611e80565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080600a84815481106112a6576112a5611e80565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600a80548061134657611345612307565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905550505b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156113c4573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f758260405161140b919061189f565b60405180910390a250565b6005546000805490501161145f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611456906123a8565b60405180910390fd5b600080549050600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054106114e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114dc90612414565b60405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160008054905061153d91906122d3565b905080821461162b57600080828154811061155b5761155a611e80565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050806000848154811061159d5761159c611e80565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008054806116da576116d9612307565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600082825260208201905092915050565b7f4f6e6c7920454f412063616e2063616c6c2066756e6374696f6e000000000000600082015250565b60006117b1601a8361176a565b91506117bc8261177b565b602082019050919050565b600060208201905081810360008301526117e0816117a4565b9050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611826826117fb565b9050919050565b6118368161181b565b811461184157600080fd5b50565b6000813590506118538161182d565b92915050565b60006020828403121561186f5761186e6117f1565b5b600061187d84828501611844565b91505092915050565b6000819050919050565b61189981611886565b82525050565b60006020820190506118b46000830184611890565b92915050565b60008115159050919050565b6118cf816118ba565b82525050565b60006020820190506118ea60008301846118c6565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561195657808201518184015260208101905061193b565b60008484015250505050565b6000601f19601f8301169050919050565b600061197e8261191c565b6119888185611927565b9350611998818560208601611938565b6119a181611962565b840191505092915050565b60006119b88383611973565b905092915050565b6000602082019050919050565b60006119d8826118f0565b6119e281856118fb565b9350836020820285016119f48561190c565b8060005b85811015611a305784840389528151611a1185826119ac565b9450611a1c836119c0565b925060208a019950506001810190506119f8565b50829750879550505050505092915050565b60006020820190508181036000830152611a5c81846119cd565b905092915050565b600082825260208201905092915050565b6000611a808261191c565b611a8a8185611a64565b9350611a9a818560208601611938565b611aa381611962565b840191505092915050565b60006020820190508181036000830152611ac88184611a75565b905092915050565b611ad981611886565b8114611ae457600080fd5b50565b600081359050611af681611ad0565b92915050565b600060208284031215611b1257611b116117f1565b5b6000611b2084828501611ae7565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611b5e8161181b565b82525050565b6000611b708383611b55565b60208301905092915050565b6000602082019050919050565b6000611b9482611b29565b611b9e8185611b34565b9350611ba983611b45565b8060005b83811015611bda578151611bc18882611b64565b9750611bcc83611b7c565b925050600181019050611bad565b5085935050505092915050565b60006020820190508181036000830152611c018184611b89565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611c4b82611962565b810181811067ffffffffffffffff82111715611c6a57611c69611c13565b5b80604052505050565b6000611c7d6117e7565b9050611c898282611c42565b919050565b600067ffffffffffffffff821115611ca957611ca8611c13565b5b611cb282611962565b9050602081019050919050565b82818337600083830152505050565b6000611ce1611cdc84611c8e565b611c73565b905082815260208101848484011115611cfd57611cfc611c0e565b5b611d08848285611cbf565b509392505050565b600082601f830112611d2557611d24611c09565b5b8135611d35848260208601611cce565b91505092915050565b600060208284031215611d5457611d536117f1565b5b600082013567ffffffffffffffff811115611d7257611d716117f6565b5b611d7e84828501611d10565b91505092915050565b611d908161181b565b82525050565b6000602082019050611dab6000830184611d87565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611deb82611886565b9150611df683611886565b9250828201905080821115611e0e57611e0d611db1565b5b92915050565b7f4f6e6c79207374616b65722063616e2063616c6c2066756e6374696f6e000000600082015250565b6000611e4a601d8361176a565b9150611e5582611e14565b602082019050919050565b60006020820190508181036000830152611e7981611e3d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611ef657607f821691505b602082108103611f0957611f08611eaf565b5b50919050565b6000611f1a82611886565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611f4c57611f4b611db1565b5b600182019050919050565b7f4f6e6c792061646d696e2063616e2063616c6c2066756e6374696f6e00000000600082015250565b6000611f8d601c8361176a565b9150611f9882611f57565b602082019050919050565b60006020820190508181036000830152611fbc81611f80565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026120257fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611fe8565b61202f8683611fe8565b95508019841693508086168417925050509392505050565b6000819050919050565b600061206c61206761206284611886565b612047565b611886565b9050919050565b6000819050919050565b61208683612051565b61209a61209282612073565b848454611ff5565b825550505050565b600090565b6120af6120a2565b6120ba81848461207d565b505050565b5b818110156120de576120d36000826120a7565b6001810190506120c0565b5050565b601f821115612123576120f481611fc3565b6120fd84611fd8565b8101602085101561210c578190505b61212061211885611fd8565b8301826120bf565b50505b505050565b600082821c905092915050565b600061214660001984600802612128565b1980831691505092915050565b600061215f8383612135565b9150826002028217905092915050565b6121788261191c565b67ffffffffffffffff81111561219157612190611c13565b5b61219b8254611ede565b6121a68282856120e2565b600060209050601f8311600181146121d957600084156121c7578287015190505b6121d18582612153565b865550612239565b601f1984166121e786611fc3565b60005b8281101561220f578489015182556001820191506020850194506020810190506121ea565b8683101561222c5784890151612228601f891682612135565b8355505b6001600288020188555050505b505050505050565b7f56616c696461746f72207365742068617320726561636865642066756c6c206360008201527f6170616369747900000000000000000000000000000000000000000000000000602082015250565b600061229d60278361176a565b91506122a882612241565b604082019050919050565b600060208201905081810360008301526122cc81612290565b9050919050565b60006122de82611886565b91506122e983611886565b925082820390508181111561230157612300611db1565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f56616c696461746f72732063616e2774206265206c657373207468616e20746860008201527f65206d696e696d756d2072657175697265642076616c696461746f72206e756d602082015250565b600061239260408361176a565b915061239d82612336565b604082019050919050565b600060208201905081810360008301526123c181612385565b9050919050565b7f696e646578206f7574206f662072616e67650000000000000000000000000000600082015250565b60006123fe60128361176a565b9150612409826123c8565b602082019050919050565b6000602082019050818103600083015261242d816123f1565b905091905056fea26469706673582212202cae50e9c37f46f4aa333b4ab3141d9a74f2ca5aa7e092e5a8380de25cd539ae64736f6c63430008120033",\n                "storage": {\n                    "0x0000000000000000000000000000000000000000000000000000000000000000": "0x0000000000000000000000000000000000000000000000000000000000000004",\n                    "0x0000000000000000000000000000000000000000000000000000000000000004": "0x0000000000000000000000000000000000000000000000022b1c8c1227a00000",\n                    "0x0000000000000000000000000000000000000000000000000000000000000005": "0x0000000000000000000000000000000000000000000000000000000000000001",\n                    "0x0000000000000000000000000000000000000000000000000000000000000006": "0x000000000000000000000000000000000000000000000000001ffffffffffffe",\n                    "0x0000000000000000000000000000000000000000000000000000000000000008": "0x000000000000000000000000000000000000000000000048431755769bb40000",\n                    "0x0000000000000000000000000000000000000000000000000000000000000009": "0x000000000000000000000000b14ff1e03a52d88c4f699489eff2e67d10eef1b5",\n                    "0x0f145e7b629d5b57a08bfc615d4c981412f2858471b2f768585b964968132263": "0x0000000000000000000000000000000000000000000000000000000000000061",\n                    "0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563": "0x000000000000000000000000c1080c8cf9e147d0edebf0dd6ec178934e786ac4",\n                    "0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564": "0x00000000000000000000000020833acb9a58f001e6a34d4ca724c020f83d29cf",\n                    "0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e565": "0x0000000000000000000000000f8a31da5e7786ac30411c8cec0dbaf9378a7613",\n                    "0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566": "0x000000000000000000000000f8ba514790e65a8451a3ccb9be9239d605044585",\n                    "0x2aaae5e585456e97a7593b79d911c29119de25b121cc110aae0718df2d1de1cd": "0x0000000000000000000000000000000000000000000000000000000000000061",\n                    "0x424a54ac64317b4822021a2c48934cd3419f050b0ffb19a0a14802aa674fca39": "0x806192880d33393cee191613ae06e4a9b50363b68dd38f26e0dcc0cb36b30d84",\n                    "0x424a54ac64317b4822021a2c48934cd3419f050b0ffb19a0a14802aa674fca3a": "0x3fc7eeff1f1c9ae66c44f4b2caea6a8500000000000000000000000000000000",\n                    "0x49e855330ca6debaae9d9f856bfb90d2d0c1e7f9ffb742e3213d0bcb74060db8": "0x0000000000000000000000000000000000000000000000008ac7230489e80000",\n                    "0x4cb5b94e2726c6d5fe4efb72d377fe63c5568d56360bd3fbf006790fbdb10679": "0x914c971325a2e39490ac9a58efd271b41dac872669c157260542c2a6283abb8c",\n                    "0x4cb5b94e2726c6d5fe4efb72d377fe63c5568d56360bd3fbf006790fbdb1067a": "0x5a84a2eb7c50434c5aa34855cf3cb70f00000000000000000000000000000000",\n                    "0x65c8a195dce47a9514ea316ebed4a0c4cbe809e520f68ea015f6ef7c7a9989c4": "0x0000000000000000000000000000000000000000000000000000000000000001",\n                    "0x67965c51f8eceb5bfc3c2dc3c9422fe7aeffae54eb4c838eb591fd60e328c82d": "0x0000000000000000000000000000000000000000000000000000000000000001",\n                    "0x6a0bd98049f9d1dfd199514a728dbe31a5d1747409cf262782741f0d1090d27e": "0x916955ed585f88a3a45d26b78491dde8964927db02e91d690892db3d04e6cf93",\n                    "0x6a0bd98049f9d1dfd199514a728dbe31a5d1747409cf262782741f0d1090d27f": "0x48624121d815e7a1502dda165f66e90200000000000000000000000000000000",\n                    "0x6a2504f9fb956fd218b300c86211e0bf3395ede2ad19edf4daac41d6466223c7": "0x0000000000000000000000000000000000000000000000000000000000000001",\n                    "0x6a8297b1bbd85e27d5b7850777c55cedb0802161cdbf23ee2ab5569e50d30951": "0x0000000000000000000000000000000000000000000000000000000000000061",\n                    "0x719b0b2a469e922534936986873be9973a63bdcc57338d88adf03ec761c3aa38": "0x0000000000000000000000000000000000000000000000000000000000000001",\n                    "0x762434cfd02081a26eaf0b3e7fac4cde0f03319eff4588860166588afa5ce397": "0x0000000000000000000000000000000000000000000000008ac7230489e80000",\n                    "0x7ab4bbb29346e33f46dd3b3b14066849c160be189d998dd5802dbe77fe64a2bb": "0x0000000000000000000000000000000000000000000000000000000000000000",\n                    "0x7b0209be985a990a22578577ca808135d908f84265285eacfa5e4d348b8d7d5a": "0x0000000000000000000000000000000000000000000000008ac7230489e80000",\n                    "0x962415d49d14fff0117fcb7e98311f0467b99a6002542d5c0e9af25e3a940cea": "0xa2547bb81719f7b57a99973b060107c0c9b7065ef124568af799926e57d621de",\n                    "0x962415d49d14fff0117fcb7e98311f0467b99a6002542d5c0e9af25e3a940ceb": "0x9d737822e38155ed698916cbee206ff300000000000000000000000000000000",\n                    "0x976b3e7a95e58a9a9dee276e2d2dc399917105334a5afeadf3d3de588a67f469": "0x0000000000000000000000000000000000000000000000000000000000000003",\n                    "0xb37bae386d886ffa39203bcb0e99b599e968e88ad6e260ddd68deb892a1f69e7": "0x0000000000000000000000000000000000000000000000000000000000000061",\n                    "0xd0bc094415d817e2be240f0af54d97f3ecc6fb734394ff3567721c306aae81c5": "0x0000000000000000000000000000000000000000000000000000000000000001",\n                    "0xd3bf5adcb5d9f4184f5b0431f73b34f4494f21fd0644392721177690334d9510": "0x0000000000000000000000000000000000000000000000000000000000000002",\n                    "0xe3ae65ad4a34d3114124c87e2699cd7d379e50cb7fe5b523a0b4ac03e544e7d3": "0x0000000000000000000000000000000000000000000000008ac7230489e80000"\n                },\n                "balance": "0x22b1c8c1227a00000"\n            },\n            "0x9FF0a3C2779236D902C8443f8671eE4319D253e8": {\n                "balance": "0x6B888FF3E784999A600000"\n            }\n        },\n        "number": "0x0",\n        "gasUsed": "0x70000",\n        "parentHash": "0x0000000000000000000000000000000000000000000000000000000000000000"\n    },\n    "params": {\n        "forks": {\n            "homestead": 0,\n            "byzantium": 0,\n            "constantinople": 0,\n            "petersburg": 0,\n            "istanbul": 0,\n            "EIP150": 0,\n            "EIP158": 0,\n            "EIP155": 0\n        },\n        "chainID": 47,\n        "engine": {\n            "ibft": {\n                "epochSize": 50,\n                "type": "PoS",\n                "validator_type": "bls"\n            }\n        },\n        "blockGasTarget": 0\n    },\n    "bootnodes": [\n        "/ip4/3.70.8.183/tcp/1478/p2p/16Uiu2HAkuTmLoXwXX2f9V24GTe5GDDAJuP9Ls15JnNSL6PGMaaEb",\n        "/ip4/54.93.244.111/tcp/1478/p2p/16Uiu2HAmVaaWyacy1zeK3XPQtbZtHcig2iXrDazhwZry82wkrirM"\n    ]\n}\n')),(0,t.kt)("h2",{id:"step-3-run-all-the-clients"},"Step 3: Run all the clients"),(0,t.kt)("admonition",{title:"Networking on Cloud providers",type:"note"},(0,t.kt)("p",{parentName:"admonition"},"Most cloud providers don't expose the IP addresses (especially public ones) as a direct network interface on your VM but rather setup an invisible NAT proxy."),(0,t.kt)("p",{parentName:"admonition"},"To allow the nodes to connect to each other in this case you would need to listen on the ",(0,t.kt)("inlineCode",{parentName:"p"},"0.0.0.0")," IP address to bind on all interfaces, but you would still need to specify the IP address or DNS address which other nodes can use to connect to your instance. This is achieved either by using the ",(0,t.kt)("inlineCode",{parentName:"p"},"--nat")," or ",(0,t.kt)("inlineCode",{parentName:"p"},"--dns")," argument where you can specify your external IP or DNS address respectively."),(0,t.kt)("h4",{parentName:"admonition",id:"example"},"Example"),(0,t.kt)("p",{parentName:"admonition"},"The associated IP address that you wish to listen on is ",(0,t.kt)("inlineCode",{parentName:"p"},"192.0.2.1"),", but it is not directly bound to any of your network interfaces."),(0,t.kt)("p",{parentName:"admonition"},"To allow the nodes to connect you would pass the following parameters:"),(0,t.kt)("p",{parentName:"admonition"},(0,t.kt)("inlineCode",{parentName:"p"},"intellichain-cli ... --libp2p 0.0.0.0:10001 --nat 192.0.2.1")),(0,t.kt)("p",{parentName:"admonition"},"Or, if you wish to specify a DNS address ",(0,t.kt)("inlineCode",{parentName:"p"},"dns/example.io"),", pass the following parameters:"),(0,t.kt)("p",{parentName:"admonition"},(0,t.kt)("inlineCode",{parentName:"p"},"intellichain-cli ... --libp2p 0.0.0.0:10001 --dns dns/example.io")),(0,t.kt)("p",{parentName:"admonition"},"This would make your node listen on all interfaces, but also make it aware that the clients are connecting to it through the specified ",(0,t.kt)("inlineCode",{parentName:"p"},"--nat")," or ",(0,t.kt)("inlineCode",{parentName:"p"},"--dns")," address.")),(0,t.kt)("p",null,"To run the ",(0,t.kt)("strong",{parentName:"p"},"first")," client:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"node-1> intellichain-cli server --data-dir ./data-dir --chain genesis.json  --libp2p 0.0.0.0:1478 --nat <public_or_private_ip> --seal\n")),(0,t.kt)("p",null,"To run the ",(0,t.kt)("strong",{parentName:"p"},"n-th")," client:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"node-n> intellichain-cli server --data-dir ./data-dir --chain genesis.json --libp2p 0.0.0.0:1478 --nat <public_or_private_ip> --seal\n")),(0,t.kt)("admonition",{title:"Specify the price limit",type:"info"},(0,t.kt)("p",{parentName:"admonition"},"A IntelliChain node can be started with a ",(0,t.kt)("strong",{parentName:"p"},"price limit")," for incoming transactions."),(0,t.kt)("p",{parentName:"admonition"},"The unit for the price limit is ",(0,t.kt)("inlineCode",{parentName:"p"},"wei"),"."),(0,t.kt)("p",{parentName:"admonition"},"Setting a price limit means that any transaction processed by the current node will need to have a gas price ",(0,t.kt)("strong",{parentName:"p"},"higher"),"\nthan the set price limit, otherwise it will not be included into a block."),(0,t.kt)("p",{parentName:"admonition"},"Having the majority of nodes respect a certain price limit enforces the rule that transactions in the network\ncannot be below a certain price threshold."),(0,t.kt)("p",{parentName:"admonition"},"The default value for the price limit is ",(0,t.kt)("inlineCode",{parentName:"p"},"0"),", meaning it is not enforced at all by default."),(0,t.kt)("p",{parentName:"admonition"},"Example of using the ",(0,t.kt)("inlineCode",{parentName:"p"},"--price-limit")," flag:"),(0,t.kt)("pre",{parentName:"admonition"},(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"intellichain-cli server --price-limit 100000 ...\n")),(0,t.kt)("p",{parentName:"admonition"},"It is worth noting that price limits ",(0,t.kt)("strong",{parentName:"p"},"are enforced only on non-local transactions"),", meaning\nthat the price limit does not apply to transactions added locally on the node.")))}s.isMDXComponent=!0}}]);