"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[371],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(n),d=i,k=p["".concat(s,".").concat(d)]||p[d]||m[d]||a;return n?r.createElement(k,l(l({ref:t},c),{},{components:n})):r.createElement(k,l({ref:t},c))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:i,l[1]=o;for(var u=2;u<a;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5435:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>u});var r=n(7462),i=(n(7294),n(3905));const a={sidebar_position:3},l="Validator Hosting",o={unversionedId:"node/validator-hosting",id:"node/validator-hosting",title:"Validator Hosting",description:"Minimum system requirements",source:"@site/docs/node/validator-hosting.md",sourceDirName:"node",slug:"/node/validator-hosting",permalink:"/docs/node/validator-hosting",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"Setup",permalink:"/docs/node/setup"},next:{title:"Staking",permalink:"/docs/category/staking"}},s={},u=[{value:"Minimum system requirements",id:"minimum-system-requirements",level:2},{value:"Service configuration",id:"service-configuration",level:2}],c={toc:u},p="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"validator-hosting"},"Validator Hosting"),(0,i.kt)("h2",{id:"minimum-system-requirements"},"Minimum system requirements"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Value"),(0,i.kt)("th",{parentName:"tr",align:null},"Influenced by"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"CPU"),(0,i.kt)("td",{parentName:"tr",align:null},"2 cores"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("ul",null,(0,i.kt)("li",null,"Number of JSON-RPC queries"),(0,i.kt)("li",null,"Size of the blockchain state"),(0,i.kt)("li",null,"Block gas limit"),(0,i.kt)("li",null,"Block time")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"RAM"),(0,i.kt)("td",{parentName:"tr",align:null},"2 GB"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("ul",null,(0,i.kt)("li",null,"Number of JSON-RPC queries"),(0,i.kt)("li",null,"Size of the blockchain state"),(0,i.kt)("li",null,"Block gas limit")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Disk"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("ul",null,(0,i.kt)("li",null,"10 GB root patition"),(0,i.kt)("li",null,"30 GB root partition with LVM for disk extension"))),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("ul",null,(0,i.kt)("li",null,"Size of the blockchain state")))))),(0,i.kt)("h2",{id:"service-configuration"},"Service configuration"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"intellichain-cli")," binary needs to run as a system service automatically upon established network connectivity and have start / stop / restart\nfunctionalities. We recommend using a service manager like ",(0,i.kt)("inlineCode",{parentName:"p"},"systemd.")," "),(0,i.kt)("p",null,"Example ",(0,i.kt)("inlineCode",{parentName:"p"},"systemd")," system configuration file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"[Unit]\nDescription=Acria IntelliChain Server\nAfter=network.target\nStartLimitIntervalSec=0\n\n[Service]\nType=simple\nRestart=always\nRestartSec=10\nUser=ec2-user\nExecStart=/home/ec2-user/acria-intellichain server --data-dir /home/ec2-user/data-dir --chain /home/ec2-user/genesis.json --libp2p 0.0.0.0:1478 --seal --block-time 8 --jsonrpc 0.0.0.0:4269 --json-rpc-batch-request-limit 500 --secrets-config /home/ec2-user/secretsManagerConfig.json\n\n[Install]\nWantedBy=multi-user.target\n")))}m.isMDXComponent=!0}}]);